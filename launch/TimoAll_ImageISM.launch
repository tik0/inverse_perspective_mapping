<?xml version="1.0"?>
<launch>
<!-- PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION -->
	<!-- Converts bounding box to image -->
	<node type="bb2image.py" name="image2bbPed" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicInName" value="/ped/BBox/Logitech_webcam/" />
		<param name="image_width" value="640" />
		<param name="image_height" value="360" />
		<param name="objectType_unknown" value="False" />
		<param name="objectType_vehicle" value="False" />
		<param name="objectType_human" value="True" />
	</node>

	<!-- Use perspektive mapping to transform a detection image to an inverse sensor model -->
	<node type="image2ism.py" name="image2ismPedestrian" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicIns" value="/det/Logitech_webcam/ped/human" />
		<param name="imageWidth" value="640" />
		<param name="imageHeight" value="360" />
		<param name="cam_xTranslation" value="0.2038" /> 
		<param name="cam_yTranslation" value="0.255" />
		<param name="cam_zTranslation" value="2.056" />
		<param name="cam_pitch" value="0.1963" />  
		<param name="cam_yaw" value="0.0" />
		<param name="cam_FOV" value="0.68067" />
		<param name="grid_resolution" value="0.5" />
		<param name="grid_xSizeInM" value="-1.0" />
		<param name="grid_ySizeInM" value="-1.0" />
	</node>

<!-- PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION PEDESTRIAN DETECTION -->
<!-- YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO -->

	<!-- Converts bounding box to image -->
	<node type="bb2image.py" name="image2bbYolo" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicInName" value="/yolo/BBox/Logitech_webcam/" />
		<param name="image_width" value="640" />
		<param name="image_height" value="480" />
		<param name="objectType_unknown" value="True" />
		<param name="objectType_vehicle" value="True" />
		<param name="objectType_human" value="True" />
	</node>

	<!-- Use perspektive mapping to transform a detection image to an inverse sensor model -->
	<node type="image2ism.py" name="image2ismYolo" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicIns" value="/det/Logitech_webcam/yolo/unknown /det/Logitech_webcam/yolo/vehicle /det/Logitech_webcam/yolo/human" /> <!-- Add multiple topics by seperating them by a space-->
		<param name="imageWidth" value="400" />
		<param name="imageHeight" value="300" />
		<param name="cam_xTranslation" value="0.2038" /> 
		<param name="cam_yTranslation" value="0.255" />
		<param name="cam_zTranslation" value="2.056" />
		<param name="cam_pitch" value="0.1963" />  
		<param name="cam_yaw" value="0.0" />
		<param name="cam_FOV" value="0.68067" />
		<param name="grid_resolution" value="0.5" />
		<param name="grid_xSizeInM" value="-1.0" />
		<param name="grid_ySizeInM" value="-1.0" />
	</node>

<!-- YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO YOLO -->
<!-- SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION -->

	<!-- Use perspektive mapping to transform a detection image to an inverse sensor model -->
	<node type="image2ism.py" name="image2ismSS" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicIns" value="/det/Logitech_webcam/semantic_segmentation/grass /det/Logitech_webcam/semantic_segmentation/ground /det/Logitech_webcam/semantic_segmentation/human /det/Logitech_webcam/semantic_segmentation/shelterbelt /det/Logitech_webcam/semantic_segmentation/unknown /det/Logitech_webcam/semantic_segmentation/vehicle /det/Logitech_webcam/semantic_segmentation/water" /> <!-- Add multiple topics by seperating them by a space in topicIns-->
		<param name="imageWidth" value="600" />
		<param name="imageHeight" value="300" />
		<param name="cam_xTranslation" value="0.2038" /> 
		<param name="cam_yTranslation" value="0.255" />
		<param name="cam_zTranslation" value="2.056" />
		<param name="cam_pitch" value="0.1963" />  
		<param name="cam_yaw" value="0.0" />
		<param name="cam_FOV" value="0.68067" />
		<param name="grid_resolution" value="0.5" />
		<param name="grid_xSizeInM" value="-1.0" />
		<param name="grid_ySizeInM" value="-1.0" />
	</node>


<!-- Showing image detection for each object class 
	<node name="image_view0" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/grass"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="grass" />
	</node>
	<node name="image_view1" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/ground"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="ground" />
	</node>
	<node name="image_view2" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/human"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="human" />
	</node>
	<node name="image_view3" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/shelterbelt"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="shelterbelt" />
	</node>
	<node name="image_view4" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/unknown"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="unknown" />
	</node>
	<node name="image_view5" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/vehicle"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="vehicle" />
	</node>
	<node name="image_view6" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/det/Logitech_webcam/semantic_segmentation/water"/>
			<param name="autosize" value="false" />
			<param name="window_name" value="water" />
	</node>
-->

<!-- SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION SEMANCTIC SEGMENTATION -->

</launch>
